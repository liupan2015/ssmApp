<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context"  xmlns:aop="http://www.springframework.org/schema/aop" 
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	 <context:annotation-config/>
	 <!-- 扫描带注解的包 -->
	 <context:component-scan base-package="com.ykai.ssm.*" />
	  
	 <!-- 引入jdbc配置文件 -->  
     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
               <value>classpath:properties/*.properties</value>
                <!--要是有多个配置文件，只需在这里继续添加即可 -->
            </list>
        </property>
    </bean>
    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    	<!-- 指定连接数据库的驱动-->
	    <property name="driverClass" value="${jdbc.driverClassName}"/>
	    <!-- 指定连接数据库的URL-->
	    <property name="jdbcUrl" value="${jdbc.url}"/>
	    <!-- 指定连接数据库的用户名-->
	    <property name="user" value="${jdbc.username}"/>
	    <!-- 指定连接数据库的密码-->
	    <property name="password" value="${jdbc.password}"/>
	    <!-- 指定连接池中保留的最大连接数. Default:15-->
	    <property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
	    <!-- 指定连接池中保留的最小连接数-->
	    <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
	    <!-- 指定连接池的初始化连接数  取值应在minPoolSize 与 maxPoolSize 之间.Default:3-->
	    <property name="initialPoolSize" value="${jdbc.initialPoolSize}"/>
	    <!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。 Default:0-->
	    <property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
	    <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数. Default:3-->
	    <property name="acquireIncrement" value="${jdbc.acquireIncrement}"/>
	    <!-- JDBC的标准,用以控制数据源内加载的PreparedStatements数量,但由于预缓存的statements属于单个connection
	    	而不是整个连接池所以设置这个参数需要考虑到多方面的因数.如果maxStatements与maxStatementsPerConnection均为0,则缓存被关闭。Default:0-->
	    <property name="maxStatements" value="${jdbc.maxStatements}"/>
	    <!-- 每60秒检查所有连接池中的空闲连接.Default:0 -->
	    <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
    </bean>
    
    <!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ykai.ssm.dao" />
    </bean>
    
    <!-- 配置Mybatis的文件 ，mapperLocations配置**Mapper.xml文件位置，configLocation配置mybatis-config文件位置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>  
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
    </bean>
    
        
</beans>